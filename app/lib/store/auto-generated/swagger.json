{"swagger": "2.0", "info": {"title": "Snippets API", "description": "Vuckeel API", "termsOfService": "https://www.google.com/policies/terms/", "contact": {"email": "asfaw.ayalkibet@gmail.com"}, "license": {"name": "BSD License"}, "version": "v1"}, "host": "api.vistar.cloud", "schemes": ["http"], "basePath": "/api/v1", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/access/access-review-detail/{id}/": {"get": {"operationId": "access_access-review-detail_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AccessReview_Vendor"}}}, "tags": ["access"]}, "put": {"operationId": "access_access-review-detail_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AccessReview_Vendor"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AccessReview_Vendor"}}}, "tags": ["access"]}, "patch": {"operationId": "access_access-review-detail_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AccessReview_Vendor"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AccessReview_Vendor"}}}, "tags": ["access"]}, "delete": {"operationId": "access_access-review-detail_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["access"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this access review_ vendor.", "required": true, "type": "string", "format": "uuid"}]}, "/access/access-reviews/": {"get": {"operationId": "access_access-reviews_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/AccessReview"}}}}}}, "tags": ["access"]}, "post": {"operationId": "access_access-reviews_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AccessReview"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/AccessReview"}}}, "tags": ["access"]}, "parameters": []}, "/access/access-reviews/{id}/": {"get": {"operationId": "access_access-reviews_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AccessReview"}}}, "tags": ["access"]}, "put": {"operationId": "access_access-reviews_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AccessReview"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AccessReview"}}}, "tags": ["access"]}, "patch": {"operationId": "access_access-reviews_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AccessReview"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/AccessReview"}}}, "tags": ["access"]}, "delete": {"operationId": "access_access-reviews_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["access"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/access/access/": {"get": {"operationId": "access_access_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Access"}}}}}}, "tags": ["access"]}, "post": {"operationId": "access_access_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Access"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Access"}}}, "tags": ["access"]}, "parameters": []}, "/access/access/{id}/": {"get": {"operationId": "access_access_read", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["access"]}, "put": {"operationId": "access_access_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AccessModel"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Access"}}, "400": {"description": "Bad Request"}, "404": {"description": "Not Found"}}, "tags": ["access"]}, "delete": {"operationId": "access_access_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["access"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/access/access_change_owner/{id}/": {"patch": {"operationId": "access_access_change_owner_partial_update", "description": "Update the owner of an access", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["owner"], "type": "object", "properties": {"owner": {"type": "string"}}}}], "responses": {"200": {"description": "Owner updated successfully"}, "404": {"description": "Access not found"}}, "tags": ["access"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/access/access_scan/": {"post": {"operationId": "access_access_scan_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["access"]}, "parameters": []}, "/access/export-access-json/{id}/": {"get": {"operationId": "access_export-access-json_read", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Access"}}}}}}, "tags": ["access"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/accounts/apollo_/": {"get": {"operationId": "accounts_apollo__list", "description": "", "parameters": [{"name": "domain", "in": "query", "description": "Specify the domain to query. If not provided, the user's company name or email domain will be used.", "required": true, "type": "string"}], "responses": {"200": {"description": "Organization data retrieved successfully", "schema": {"type": "object"}}, "401": {"description": "Authentication required"}, "404": {"description": "Organization data not found"}, "500": {"description": "Internal Server Error"}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/authentication/code/request/": {"post": {"operationId": "accounts_authentication_code_request_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/authentication/login/": {"post": {"operationId": "accounts_authentication_login_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Login"}}], "responses": {"200": {"description": "Login response", "schema": {"$ref": "#/definitions/LoginResponse"}}, "400": {"description": "Login error response", "schema": {"$ref": "#/definitions/LoginErrorResponse"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/authentication/login/code/": {"post": {"operationId": "accounts_authentication_login_code_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/authentication/mfa/change-primary-method/": {"post": {"operationId": "accounts_authentication_mfa_change-primary-method_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/authentication/mfa/config/": {"get": {"operationId": "accounts_authentication_mfa_config_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/authentication/mfa/user-active-methods/": {"get": {"operationId": "accounts_authentication_mfa_user-active-methods_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/UserMFAMethod"}}}}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/authentication/sso/google/": {"post": {"operationId": "accounts_authentication_sso_google_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SSO"}}], "responses": {"200": {"description": "Login response", "schema": {"$ref": "#/definitions/LoginResponse"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/authentication/sso/microsoft/": {"post": {"operationId": "accounts_authentication_sso_microsoft_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/SSO"}}], "responses": {"200": {"description": "Login response", "schema": {"$ref": "#/definitions/LoginResponse"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/authentication/{method}/activate/": {"post": {"operationId": "accounts_authentication_activate_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["accounts"]}, "parameters": [{"name": "method", "in": "path", "required": true, "type": "string"}]}, "/accounts/authentication/{method}/activate/confirm/": {"post": {"operationId": "accounts_authentication_activate_confirm_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["accounts"]}, "parameters": [{"name": "method", "in": "path", "required": true, "type": "string"}]}, "/accounts/authentication/{method}/codes/regenerate/": {"post": {"operationId": "accounts_authentication_codes_regenerate_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["accounts"]}, "parameters": [{"name": "method", "in": "path", "required": true, "type": "string"}]}, "/accounts/authentication/{method}/deactivate/": {"post": {"operationId": "accounts_authentication_deactivate_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["accounts"]}, "parameters": [{"name": "method", "in": "path", "required": true, "type": "string"}]}, "/accounts/company/": {"get": {"operationId": "accounts_company_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/CompanyInfo"}}}}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/company/{id}/": {"get": {"operationId": "accounts_company_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CompanyInfo"}}}, "tags": ["accounts"]}, "put": {"operationId": "accounts_company_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CompanyInfo"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CompanyInfo"}}}, "tags": ["accounts"]}, "patch": {"operationId": "accounts_company_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CompanyInfo"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CompanyInfo"}}}, "tags": ["accounts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this Company.", "required": true, "type": "string", "format": "uuid"}]}, "/accounts/compliance_manager/": {"get": {"operationId": "accounts_compliance_manager_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/ComplianceManger"}}}}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/compliance_manager/{id}/": {"get": {"operationId": "accounts_compliance_manager_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ComplianceManger"}}}, "tags": ["accounts"]}, "put": {"operationId": "accounts_compliance_manager_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ComplianceManger"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ComplianceManger"}}}, "tags": ["accounts"]}, "patch": {"operationId": "accounts_compliance_manager_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ComplianceManger"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ComplianceManger"}}}, "tags": ["accounts"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this compliance manager.", "required": true, "type": "string", "format": "uuid"}]}, "/accounts/current_user/": {"get": {"operationId": "accounts_current_user_list", "description": "", "parameters": [], "responses": {"200": {"description": "Login response", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/custom_verification_email_sent/": {"get": {"operationId": "accounts_custom_verification_email_sent_list", "description": "", "parameters": [{"name": "email", "in": "query", "required": true, "type": "string"}], "responses": {"200": {"description": ""}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/password_reset/": {"post": {"operationId": "accounts_password_reset_create", "summary": "An Api View which provides a method to request a password reset token based on an e-mail address", "description": "Sends a signal reset_password_token_created when a reset token was created", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Email"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Email"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/password_reset/confirm/": {"post": {"operationId": "accounts_password_reset_confirm_create", "description": "An Api View which provides a method to reset a password based on a unique token", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PasswordToken"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PasswordToken"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/password_reset/validate_token/": {"post": {"operationId": "accounts_password_reset_validate_token_create", "description": "An Api View which provides a method to verify that a token is valid", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ResetToken"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ResetToken"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/rest-auth/password/change/": {"post": {"operationId": "accounts_rest-auth_password_change_create", "summary": "Calls Django Auth SetPasswordForm save method.", "description": "Accepts the following POST parameters: new_password1, new_password2\nReturns the success/fail message.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PasswordChange"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/PasswordChange"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/rest-auth/registration/": {"post": {"operationId": "accounts_rest-auth_registration_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RestAuthRegister"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/RestAuthRegister"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/rest-auth/registration/account-confirm-email/{key}/": {"post": {"operationId": "accounts_rest-auth_registration_account-confirm-email_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["accounts"]}, "parameters": [{"name": "key", "in": "path", "required": true, "type": "string"}]}, "/accounts/token/refresh/": {"post": {"operationId": "accounts_token_refresh_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"200": {"description": "Refresh token response", "schema": {"$ref": "#/definitions/TokenRefreshResponse"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/token/verify/": {"post": {"operationId": "accounts_token_verify_create", "description": "Takes a token and indicates if it is valid.  This view provides no\ninformation about a token's fitness for a particular use.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenVerify"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenVerify"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/user_auditor/": {"get": {"operationId": "accounts_user_auditor_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["accounts"]}, "post": {"operationId": "accounts_user_auditor_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["accounts"]}, "put": {"operationId": "accounts_user_auditor_update", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["accounts"]}, "parameters": []}, "/chatbot/chats/": {"post": {"operationId": "chatbot_chats_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Chatbot"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ChatbotResponse"}}, "400": {"description": "Bad Request"}, "404": {"description": "Not Found"}}, "tags": ["chatbot"]}, "parameters": []}, "/compliance/controls/": {"get": {"operationId": "compliance_controls_list", "description": "", "parameters": [{"name": "search", "in": "query", "required": false, "type": "string"}, {"name": "order_by", "in": "query", "required": false, "type": "string"}, {"name": "status", "in": "query", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Control"}}}}}}, "tags": ["compliance"]}, "parameters": []}, "/compliance/controls/run_test_all/": {"post": {"operationId": "compliance_controls_run_test_all", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Control"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Control"}}}, "tags": ["compliance"]}, "parameters": []}, "/compliance/controls/summary/": {"get": {"operationId": "compliance_controls_summary_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["compliance"]}, "parameters": []}, "/compliance/controls/{id}/": {"get": {"operationId": "compliance_controls_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Control"}}}, "tags": ["compliance"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this control.", "required": true, "type": "string", "format": "uuid"}]}, "/compliance/download_sla_tests/": {"get": {"operationId": "compliance_download_sla_tests_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Sla"}}}}}}, "tags": ["compliance"]}, "post": {"operationId": "compliance_download_sla_tests_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Sla"}}, {"name": "domain", "in": "query", "description": "Filter SLA results by company name or domain", "type": "string"}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Sla"}}}, "tags": ["compliance"]}, "parameters": []}, "/compliance/download_sla_tests/{id}/": {"get": {"operationId": "compliance_download_sla_tests_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Sla"}}}, "tags": ["compliance"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this sla test.", "required": true, "type": "string", "format": "uuid"}]}, "/compliance/framework/": {"get": {"operationId": "compliance_framework_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["compliance"]}, "parameters": []}, "/compliance/home/summary/": {"get": {"operationId": "compliance_home_summary_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["compliance"]}, "parameters": []}, "/compliance/sla_date_edit/": {"put": {"operationId": "compliance_sla_date_edit_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Sla"}}, {"name": "number_of_days", "in": "query", "description": "Number of days to add to the current date to get the due date.", "required": true, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Sla"}}}, "tags": ["compliance"]}, "patch": {"operationId": "compliance_sla_date_edit_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Sla"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Sla"}}}, "tags": ["compliance"]}, "parameters": []}, "/compliance/sla_tests/": {"get": {"operationId": "compliance_sla_tests_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Sla"}}}}}}, "tags": ["compliance"]}, "parameters": []}, "/compliance/sla_tests/{id}/": {"get": {"operationId": "compliance_sla_tests_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Sla"}}}, "tags": ["compliance"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this sla test.", "required": true, "type": "string", "format": "uuid"}]}, "/computers/computers/": {"get": {"operationId": "computers_computers_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Computer"}}}}}}, "tags": ["computers"]}, "post": {"operationId": "computers_computers_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Computer"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Computer"}}}, "tags": ["computers"]}, "parameters": []}, "/computers/computers/{id}/": {"get": {"operationId": "computers_computers_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Computer"}}}, "tags": ["computers"]}, "patch": {"operationId": "computers_computers_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Computer"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Computer"}}}, "tags": ["computers"]}, "delete": {"operationId": "computers_computers_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["computers"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/computers/osquery_log_data/": {"post": {"operationId": "computers_osquery_log_data_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["computers"]}, "parameters": []}, "/documents/": {"get": {"operationId": "documents_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Document"}}}}}}, "tags": ["documents"]}, "post": {"operationId": "documents_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Document"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Document"}}}, "tags": ["documents"]}, "parameters": []}, "/documents/get_document_types/": {"get": {"operationId": "documents_get_document_types", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Document"}}}}}}, "tags": ["documents"]}, "parameters": []}, "/documents/{id}/": {"delete": {"operationId": "documents_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["documents"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this document.", "required": true, "type": "string", "format": "uuid"}]}, "/employees/": {"get": {"operationId": "employees_list", "description": "", "parameters": [{"name": "employment_type", "in": "query", "required": false, "type": "string"}, {"name": "office365_mfa", "in": "query", "required": false, "type": "string"}, {"name": "gsuite_mfa", "in": "query", "required": false, "type": "string"}, {"name": "slack_mfa", "in": "query", "required": false, "type": "string"}, {"name": "background_checked", "in": "query", "required": false, "type": "string"}, {"name": "accepted_policies", "in": "query", "required": false, "type": "string"}, {"name": "security_training", "in": "query", "required": false, "type": "string"}, {"name": "search", "in": "query", "required": false, "type": "string"}, {"name": "order_by", "in": "query", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Employee"}}}}}}, "tags": ["employees"]}, "post": {"operationId": "employees_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Employee"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Employee"}}}, "tags": ["employees"]}, "parameters": []}, "/employees/accept_policies/": {"post": {"operationId": "employees_post", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Employee"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Employee"}}}, "tags": ["employees"]}, "parameters": []}, "/employees/current_employee/": {"get": {"operationId": "employees_current_employee_read", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Employee"}}}}}}, "tags": ["employees"]}, "parameters": []}, "/employees/employeeMdm/": {"get": {"operationId": "employees_employeeMdm_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/EmployeeMDM"}}}}}}, "tags": ["employees"]}, "post": {"operationId": "employees_employeeMdm_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EmployeeMDM"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/EmployeeMDM"}}}, "tags": ["employees"]}, "parameters": []}, "/employees/employment_access/{id}/": {"get": {"operationId": "employees_employment_access_read", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["employees"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/employees/employment_type/": {"post": {"operationId": "employees_employment_type_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EmployeeEmploymentTypeUpdate"}}], "responses": {"200": {"description": "Employee Update Response", "schema": {"$ref": "#/definitions/EmployeeUpdateResponse"}}}, "tags": ["employees"]}, "parameters": []}, "/employees/merge/": {"post": {"operationId": "employees_merge_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/EmployeeMerge"}}], "responses": {"200": {"description": "Employee Merge Response", "schema": {"$ref": "#/definitions/EmployeeUpdateResponse"}}}, "tags": ["employees"]}, "parameters": []}, "/employees/upload_employee_docmuent/{id}/": {"put": {"operationId": "employees_put", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Employee"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Employee"}}}, "tags": ["employees"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this employee.", "required": true, "type": "string", "format": "uuid"}]}, "/integrations/": {"get": {"operationId": "integrations_list", "description": "", "parameters": [{"name": "template_name", "in": "query", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Integration"}}}}, "tags": ["integrations"]}, "parameters": []}, "/integrations/aws/": {"post": {"operationId": "integrations_aws_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AWS"}}], "responses": {"201": {"description": "Integration response", "schema": {"$ref": "#/definitions/Integration"}}}, "tags": ["integrations"]}, "parameters": []}, "/integrations/awscloudf": {"get": {"operationId": "integrations_awscloudf_list", "description": "recreate the redirect", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["integrations"]}, "post": {"operationId": "integrations_awscloudf_create", "description": "recreate the redirect", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/AWSSerializerCloudFormation"}}], "responses": {"201": {"description": "Integration response", "schema": {"$ref": "#/definitions/Integration"}}}, "tags": ["integrations"]}, "parameters": []}, "/integrations/azure/": {"post": {"operationId": "integrations_azure_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Azure"}}], "responses": {"201": {"description": "Integration response", "schema": {"$ref": "#/definitions/Integration"}}}, "tags": ["integrations"]}, "parameters": []}, "/integrations/debug": {"post": {"operationId": "integrations_debug_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["integrations"]}, "parameters": []}, "/integrations/github/": {"post": {"operationId": "integrations_github_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/GitHub"}}], "responses": {"201": {"description": "Integration response", "schema": {"$ref": "#/definitions/Integration"}}}, "tags": ["integrations"]}, "parameters": []}, "/integrations/gsuite/": {"post": {"operationId": "integrations_gsuite_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/GSuite"}}], "responses": {"201": {"description": "Integration response", "schema": {"$ref": "#/definitions/Integration"}}}, "tags": ["integrations"]}, "parameters": []}, "/integrations/integration-list-company/": {"get": {"operationId": "integrations_integration-list-company_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["integrations"]}, "parameters": []}, "/integrations/integration-list/": {"get": {"operationId": "integrations_integration-list_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["integrations"]}, "post": {"operationId": "integrations_integration-list_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["integrations"]}, "parameters": []}, "/integrations/jira/": {"post": {"operationId": "integrations_jira_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Jira"}}], "responses": {"201": {"description": "Integration response", "schema": {"$ref": "#/definitions/Integration"}}}, "tags": ["integrations"]}, "parameters": []}, "/integrations/office365/": {"post": {"operationId": "integrations_office365_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Office365"}}], "responses": {"201": {"description": "Integration response", "schema": {"$ref": "#/definitions/Integration"}}}, "tags": ["integrations"]}, "parameters": []}, "/integrations/slack/": {"post": {"operationId": "integrations_slack_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Slack"}}], "responses": {"201": {"description": "Integration response", "schema": {"$ref": "#/definitions/Integration"}}}, "tags": ["integrations"]}, "parameters": []}, "/integrations/{id}/": {"get": {"operationId": "integrations_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Integration"}}}, "tags": ["integrations"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this integration.", "required": true, "type": "string", "format": "uuid"}]}, "/inventory/": {"get": {"operationId": "inventory_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["inventory"]}, "put": {"operationId": "inventory_update", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["inventory"]}, "delete": {"operationId": "inventory_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["inventory"]}, "parameters": []}, "/inventory/inventory_detail/{id}/": {"get": {"operationId": "inventory_inventory_detail_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/InventoryDetail"}}}, "tags": ["inventory"]}, "patch": {"operationId": "inventory_inventory_detail_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/InventoryDetail"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/InventoryDetail"}}}, "tags": ["inventory"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this inventory detail.", "required": true, "type": "integer"}]}, "/payments/checkout/": {"post": {"operationId": "payments_checkout_create", "description": "price id ", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["price_id"], "type": "object", "properties": {"price_id": {"type": "string"}}}}], "responses": {"200": {"description": "successfully"}, "404": {"description": "not found"}}, "tags": ["payments"]}, "parameters": []}, "/payments/customer-portal/": {"post": {"operationId": "payments_customer-portal_create", "description": "Provides redirect URL for Stripe customer portal.", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["payments"]}, "parameters": []}, "/payments/my-subscription-items/": {"get": {"operationId": "payments_my-subscription-items_list", "description": "SubscriptionItems of current user", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/SubscriptionItem"}}}}, "tags": ["payments"]}, "parameters": []}, "/payments/my-subscription/": {"get": {"operationId": "payments_my-subscription_list", "description": "Subscription of current user", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Subscription"}}}}, "tags": ["payments"]}, "parameters": []}, "/payments/subscribable-product/": {"get": {"operationId": "payments_subscribable-product_list", "description": "Products that can be subscribed.\nDepending on whether this request is made with a bearer token,\nAnonymous user will receive a list of product and prices available to the public.\nAuthenticated user will receive a list of products and prices available to the user, excluding any product prices\nthe user has already been subscribed to.", "parameters": [], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Price"}}}}, "tags": ["payments"]}, "parameters": []}, "/questions/answer/": {"post": {"operationId": "questions_answer_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["questions"]}, "parameters": []}, "/questions/company_policy_templates/": {"get": {"operationId": "questions_company_policy_templates_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/CompanyPolicyTemplate"}}}}}}, "tags": ["questions"]}, "parameters": []}, "/questions/company_policy_templates/topic/{tpk}/": {"get": {"operationId": "questions_company_policy_templates_retrieve_topic_template", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/CompanyPolicyTemplate"}}}}}}, "tags": ["questions"]}, "parameters": [{"name": "tpk", "in": "path", "required": true, "type": "string"}]}, "/questions/company_policy_templates/{id}/": {"get": {"operationId": "questions_company_policy_templates_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CompanyPolicyTemplate"}}}, "tags": ["questions"]}, "put": {"operationId": "questions_company_policy_templates_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CompanyPolicyTemplate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CompanyPolicyTemplate"}}}, "tags": ["questions"]}, "patch": {"operationId": "questions_company_policy_templates_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/CompanyPolicyTemplate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/CompanyPolicyTemplate"}}}, "tags": ["questions"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this company policy template.", "required": true, "type": "string", "format": "uuid"}]}, "/questions/employee_topics/": {"get": {"operationId": "questions_employee_topics_list", "description": "", "parameters": [{"name": "topic_type", "in": "query", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Topic"}}}}, "tags": ["questions"]}, "parameters": []}, "/questions/employee_topics/{id}/": {"get": {"operationId": "questions_employee_topics_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Topic"}}}, "tags": ["questions"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this topic.", "required": true, "type": "string", "format": "uuid"}]}, "/questions/test_migration/": {"post": {"operationId": "questions_test_migration_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["questions"]}, "parameters": []}, "/questions/topics/": {"get": {"operationId": "questions_topics_list", "description": "", "parameters": [{"name": "topic_type", "in": "query", "required": false, "type": "string"}], "responses": {"200": {"description": "", "schema": {"type": "array", "items": {"$ref": "#/definitions/Topic"}}}}, "tags": ["questions"]}, "parameters": []}, "/questions/topics/{id}/": {"get": {"operationId": "questions_topics_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Topic"}}}, "tags": ["questions"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this topic.", "required": true, "type": "string", "format": "uuid"}]}, "/questions/topics/{topic_id}/icon": {"get": {"operationId": "questions_topics_icon_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["questions"]}, "parameters": [{"name": "topic_id", "in": "path", "required": true, "type": "string"}]}, "/questions/topics/{topic_id}/questions/{question_id}/answers/{answer_id}/file_answer": {"get": {"operationId": "questions_topics_questions_answers_file_answer_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["questions"]}, "parameters": [{"name": "answer_id", "in": "path", "required": true, "type": "string"}, {"name": "question_id", "in": "path", "required": true, "type": "string"}, {"name": "topic_id", "in": "path", "required": true, "type": "string"}]}, "/reports/": {"get": {"operationId": "reports_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Report"}}}}}}, "tags": ["reports"]}, "post": {"operationId": "reports_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Report"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Report"}}}, "tags": ["reports"]}, "parameters": []}, "/reports/{id}/": {"delete": {"operationId": "reports_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["reports"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this report.", "required": true, "type": "string", "format": "uuid"}]}, "/risk_management/risk-calculator/": {"post": {"operationId": "risk_management_risk-calculator_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"required": ["NumberOfEmployees", "NumberOfRecords", "Revenue"], "type": "object", "properties": {"NumberOfEmployees": {"type": "integer"}, "NumberOfRecords": {"type": "integer"}, "Revenue": {"type": "number", "format": "float"}}}}], "responses": {"200": {"description": "OK"}, "400": {"description": "Bad Request"}}, "tags": ["risk_management"]}, "parameters": []}, "/risk_management/risk-categories/": {"get": {"operationId": "risk_management_risk-categories_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/RiskCategory"}}}}}}, "tags": ["risk_management"]}, "post": {"operationId": "risk_management_risk-categories_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RiskCategory"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/RiskCategory"}}}, "tags": ["risk_management"]}, "parameters": []}, "/risk_management/risk-distribution/": {"get": {"operationId": "risk_management_risk-distribution_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["risk_management"]}, "parameters": []}, "/risk_management/risk-libraries/": {"get": {"operationId": "risk_management_risk-libraries_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/RiskLibrary"}}}}}}, "tags": ["risk_management"]}, "post": {"operationId": "risk_management_risk-libraries_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RiskLibrary"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/RiskLibrary"}}}, "tags": ["risk_management"]}, "parameters": []}, "/risk_management/risk-scenarios/": {"get": {"operationId": "risk_management_risk-scenarios_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/RiskScenario"}}}}}}, "tags": ["risk_management"]}, "post": {"operationId": "risk_management_risk-scenarios_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RiskScenario"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/RiskScenario"}}}, "tags": ["risk_management"]}, "parameters": []}, "/risk_management/risk-scenarios/remove-library/{library_id}/": {"delete": {"operationId": "risk_management_risk-scenarios_remove-library_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["risk_management"]}, "parameters": [{"name": "library_id", "in": "path", "required": true, "type": "string"}]}, "/risk_management/risk-scenarios/{id}/": {"get": {"operationId": "risk_management_risk-scenarios_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RiskTreatmentPlan"}}}, "tags": ["risk_management"]}, "put": {"operationId": "risk_management_risk-scenarios_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RiskTreatmentPlan"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RiskTreatmentPlan"}}}, "tags": ["risk_management"]}, "patch": {"operationId": "risk_management_risk-scenarios_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RiskTreatmentPlan"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RiskTreatmentPlan"}}}, "tags": ["risk_management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this risk scenario.", "required": true, "type": "string", "format": "uuid"}]}, "/risk_management/risk-scenarios/{id}/residual-score/": {"get": {"operationId": "risk_management_risk-scenarios_residual-score_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RiskResidualScore"}}}, "tags": ["risk_management"]}, "put": {"operationId": "risk_management_risk-scenarios_residual-score_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RiskResidualScore"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RiskResidualScore"}}}, "tags": ["risk_management"]}, "patch": {"operationId": "risk_management_risk-scenarios_residual-score_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RiskResidualScore"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RiskResidualScore"}}}, "tags": ["risk_management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this risk scenario.", "required": true, "type": "string", "format": "uuid"}]}, "/risk_management/risk-scenarios/{id}/review/": {"get": {"operationId": "risk_management_risk-scenarios_review_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RiskReview"}}}, "tags": ["risk_management"]}, "put": {"operationId": "risk_management_risk-scenarios_review_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RiskReview"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RiskReview"}}}, "tags": ["risk_management"]}, "patch": {"operationId": "risk_management_risk-scenarios_review_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RiskReview"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RiskReview"}}}, "tags": ["risk_management"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this risk scenario.", "required": true, "type": "string", "format": "uuid"}]}, "/risk_management/risk-scenarios/{risk_scenario_id}/residual-scores/": {"post": {"operationId": "risk_management_risk-scenarios_residual-scores_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RiskResidualScore"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/RiskResidualScore"}}}, "tags": ["risk_management"]}, "parameters": [{"name": "risk_scenario_id", "in": "path", "required": true, "type": "string"}]}, "/risk_management/risk-scenarios/{risk_scenario_id}/reviews/": {"post": {"operationId": "risk_management_risk-scenarios_reviews_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RiskReview"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/RiskReview"}}}, "tags": ["risk_management"]}, "parameters": [{"name": "risk_scenario_id", "in": "path", "required": true, "type": "string"}]}, "/tasks/compliance/all_test/": {"get": {"operationId": "tasks_compliance_all_test_list", "description": "", "parameters": [{"name": "result", "in": "query", "description": "Specify the result to query. If not provided, default_results = ['Passed', 'Failed']", "required": false, "type": "string"}, {"name": "category", "in": "query", "description": "Specify the category to query. If not provided, default_categories = ['Human Resources','Governance','IT Security', 'IT Operations', 'Documents', 'Risk Management']", "required": false, "type": "string"}, {"name": "type", "in": "query", "description": "Specify the test type to query. If not provided, default_types = ['Policy', 'Document', 'Monitor']", "required": false, "type": "string"}, {"name": "id", "in": "query", "description": "Specify the test id to query. If not provided, example = VOPS1:005", "required": false, "type": "string"}], "responses": {"200": {"description": "Monitored data retrieved successfully", "schema": {"type": "object"}}, "401": {"description": "Authentication required"}, "404": {"description": "Organization data not found"}, "500": {"description": "Internal Server Error"}}, "tags": ["tasks"]}, "parameters": []}, "/tasks/compliance/aws/detail/{id}/": {"get": {"operationId": "tasks_compliance_aws_detail_read", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["tasks"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/tasks/compliance/github/detail/{id}/": {"get": {"operationId": "tasks_compliance_github_detail_read", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["tasks"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/tasks/scan_aws/": {"post": {"operationId": "tasks_scan_aws_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["tasks"]}, "parameters": []}, "/tasks/scan_azure/": {"post": {"operationId": "tasks_scan_azure_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["tasks"]}, "parameters": []}, "/tasks/scan_document/": {"get": {"operationId": "tasks_scan_document_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["tasks"]}, "post": {"operationId": "tasks_scan_document_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["tasks"]}, "parameters": []}, "/tasks/scan_github/": {"get": {"operationId": "tasks_scan_github_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["tasks"]}, "post": {"operationId": "tasks_scan_github_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["tasks"]}, "parameters": []}, "/tasks/scan_status/": {"post": {"operationId": "tasks_scan_status_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/IntegrationScanStatus"}}], "responses": {"200": {"description": "Status response", "schema": {"$ref": "#/definitions/IntegrationScanStatusResponse"}}}, "tags": ["tasks"]}, "parameters": []}, "/tasks/todo-task-filter/": {"get": {"operationId": "tasks_todo-task-filter_list", "description": "", "parameters": [{"name": "id", "in": "query", "description": "Specify the control id to query. If not provided, example = VOPS1:005", "required": false, "type": "string"}], "responses": {"200": {"description": "Monitored data retrieved successfully", "schema": {"type": "object"}}, "401": {"description": "Authentication required"}, "404": {"description": "Organization data not found"}, "500": {"description": "Internal Server Error"}}, "tags": ["tasks"]}, "parameters": []}, "/tasks/todo-task-list/": {"get": {"operationId": "tasks_todo-task-list_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["tasks"]}, "parameters": []}, "/trust_reports/": {"post": {"operationId": "trust_reports_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TrustReport"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TrustReport"}}}, "tags": ["trust_reports"]}, "parameters": []}, "/trust_reports/get_all_controls/": {"get": {"operationId": "trust_reports_get_all_controls", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/TrustReport"}}}}}}, "tags": ["trust_reports"]}, "parameters": []}, "/trust_reports/get_all_documents/": {"get": {"operationId": "trust_reports_get_all_documents", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/TrustReport"}}}}}}, "tags": ["trust_reports"]}, "parameters": []}, "/trust_reports/get_detail/": {"get": {"operationId": "trust_reports_get_detail", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/TrustReport"}}}}}}, "tags": ["trust_reports"]}, "parameters": []}, "/trust_reports/grant_access/": {"post": {"operationId": "trust_reports_grant_access", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TrustReport"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TrustReport"}}}, "tags": ["trust_reports"]}, "parameters": []}, "/trust_reports/request_access_document/": {"post": {"operationId": "trust_reports_request_access_document", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TrustReport"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TrustReport"}}}, "tags": ["trust_reports"]}, "parameters": []}, "/vendors/vendor-company-create/": {"post": {"operationId": "vendors_vendor-company-create_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["vendors"]}, "parameters": []}, "/vendors/vendor-company-list/": {"get": {"operationId": "vendors_vendor-company-list_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/VendorCompany"}}}}}}, "tags": ["vendors"]}, "parameters": []}, "/vendors/vendor-contact-info/": {"post": {"operationId": "vendors_vendor-contact-info_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/VendorContactInfo"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/VendorContactInfo"}}}, "tags": ["vendors"]}, "parameters": []}, "/vendors/vendor-contact-info/{id}/": {"get": {"operationId": "vendors_vendor-contact-info_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/VendorContactInfo"}}}, "tags": ["vendors"]}, "put": {"operationId": "vendors_vendor-contact-info_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/VendorContactInfo"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/VendorContactInfo"}}}, "tags": ["vendors"]}, "patch": {"operationId": "vendors_vendor-contact-info_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/VendorContactInfo"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/VendorContactInfo"}}}, "tags": ["vendors"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this vendor contact info.", "required": true, "type": "string", "format": "uuid"}]}, "/vendors/vendor-reference/": {"post": {"operationId": "vendors_vendor-reference_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/VendorReference"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/VendorReference"}}}, "tags": ["vendors"]}, "parameters": []}, "/vendors/vendor-reference/{id}/": {"get": {"operationId": "vendors_vendor-reference_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/VendorReference"}}}, "tags": ["vendors"]}, "put": {"operationId": "vendors_vendor-reference_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/VendorReference"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/VendorReference"}}}, "tags": ["vendors"]}, "patch": {"operationId": "vendors_vendor-reference_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/VendorReference"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/VendorReference"}}}, "tags": ["vendors"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this vendor reference.", "required": true, "type": "string", "format": "uuid"}]}, "/vendors/vendor-risk-management/": {"post": {"operationId": "vendors_vendor-risk-management_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/VendorRiskManagement"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/VendorRiskManagement"}}}, "tags": ["vendors"]}, "parameters": []}, "/vendors/vendor-risk-management/{id}/": {"get": {"operationId": "vendors_vendor-risk-management_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/VendorRiskManagement"}}}, "tags": ["vendors"]}, "put": {"operationId": "vendors_vendor-risk-management_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/VendorRiskManagement"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/VendorRiskManagement"}}}, "tags": ["vendors"]}, "patch": {"operationId": "vendors_vendor-risk-management_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/VendorRiskManagement"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/VendorRiskManagement"}}}, "tags": ["vendors"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this vendor risk management.", "required": true, "type": "string", "format": "uuid"}]}, "/vendors/vendor-security-review/": {"post": {"operationId": "vendors_vendor-security-review_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/VendorSecurityReview"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/VendorSecurityReview"}}}, "tags": ["vendors"]}, "parameters": []}, "/vendors/vendor-security-review/{id}/": {"get": {"operationId": "vendors_vendor-security-review_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/VendorSecurityReview"}}}, "tags": ["vendors"]}, "put": {"operationId": "vendors_vendor-security-review_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/VendorSecurityReview"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/VendorSecurityReview"}}}, "tags": ["vendors"]}, "patch": {"operationId": "vendors_vendor-security-review_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/VendorSecurityReview"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/VendorSecurityReview"}}}, "tags": ["vendors"]}, "parameters": [{"name": "id", "in": "path", "description": "A UUID string identifying this vendor security review.", "required": true, "type": "string", "format": "uuid"}]}, "/vendors/vendors/": {"get": {"operationId": "vendors_vendors_list", "description": "", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Vendor"}}}}}}, "tags": ["vendors"]}, "post": {"operationId": "vendors_vendors_create", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/VendorCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/VendorCreate"}}}, "tags": ["vendors"]}, "parameters": []}, "/vendors/vendors/{id}/": {"get": {"operationId": "vendors_vendors_read", "description": "", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Vendor"}}}, "tags": ["vendors"]}, "put": {"operationId": "vendors_vendors_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Vendor"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Vendor"}}}, "tags": ["vendors"]}, "patch": {"operationId": "vendors_vendors_partial_update", "description": "", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Vendor"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/Vendor"}}}, "tags": ["vendors"]}, "delete": {"operationId": "vendors_vendors_delete", "description": "", "parameters": [], "responses": {"204": {"description": ""}}, "tags": ["vendors"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/vulnerability/": {"get": {"operationId": "vulnerability_list", "description": "", "parameters": [], "responses": {"200": {"description": ""}}, "tags": ["vulnerability"]}, "post": {"operationId": "vulnerability_create", "description": "", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["vulnerability"]}, "parameters": []}}, "definitions": {"VendorAccess": {"required": ["name", "inherent_risk"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "minLength": 1}, "vendor_website_url": {"title": "Vendor website url", "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}, "internal_security_owner": {"title": "Internal security owner", "type": "string", "x-nullable": true}, "inherent_risk": {"title": "Inherent risk", "type": "string", "enum": ["Critical", "High", "Medium", "Low", "Unscored"]}, "additional_note": {"title": "Additional note", "type": "string", "x-nullable": true}, "authentication_method": {"title": "Authentication method", "type": "string", "x-nullable": true}, "service_provided": {"title": "Service provided", "type": "string", "x-nullable": true}, "synced": {"title": "Synced", "type": "string", "readOnly": true}, "access_data": {"title": "Access data", "type": "string", "readOnly": true}}}, "AccessReview_Vendor": {"required": ["vendor", "access_review"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "vendor": {"$ref": "#/definitions/VendorAccess"}, "document_file": {"title": "Document file", "type": "string", "readOnly": true, "format": "uri"}, "accessData": {"title": "AccessData", "type": "string", "maxLength": 200}, "status": {"title": "Status", "type": "string", "enum": ["draft", "in_review", "completed"]}, "access_review": {"title": "Access review", "type": "string", "format": "uuid"}, "reviewer": {"title": "Reviewer", "type": "string", "format": "uuid", "x-nullable": true}}}, "AccessReview": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "company": {"title": "Company", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 200}, "status": {"title": "Status", "type": "string", "enum": ["draft", "in_review", "completed"]}, "date_started": {"title": "Date started", "type": "string", "format": "date", "readOnly": true}, "date_completed": {"title": "Date completed", "type": "string", "format": "date", "x-nullable": true}, "description": {"title": "Description", "type": "string"}, "effective_date": {"title": "Effective date", "type": "string", "format": "date", "x-nullable": true}, "note": {"title": "Note", "type": "string", "x-nullable": true}, "access_review_review_account_type": {"title": "Access review review account type", "type": "string", "readOnly": true}}}, "Access": {"type": "object", "properties": {"employees": {"title": "Employees", "type": "string", "readOnly": true}}}, "AccessModel": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "first_name": {"title": "First name", "type": "string", "maxLength": 255, "minLength": 1, "x-nullable": true}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1, "x-nullable": true}, "platform": {"title": "Platform", "type": "string", "maxLength": 255, "minLength": 1, "x-nullable": true}, "status": {"title": "Status", "type": "string", "maxLength": 255, "minLength": 1, "x-nullable": true}, "type": {"title": "Type", "type": "string", "maxLength": 255, "minLength": 1, "x-nullable": true}, "created_at": {"title": "Created at", "type": "string", "format": "date-time", "readOnly": true}, "deactivate": {"title": "Deactivate", "type": "boolean", "x-nullable": true}, "note": {"title": "Note", "type": "string", "minLength": 1, "x-nullable": true}, "review_date": {"title": "Review date", "type": "string", "format": "date", "x-nullable": true}, "start_date": {"title": "Start date", "type": "string", "format": "date", "x-nullable": true}, "access_level": {"title": "Access level", "type": "string", "maxLength": 255, "minLength": 1, "x-nullable": true}}}, "Login": {"required": ["password", "username"], "type": "object", "properties": {"password": {"title": "Password", "type": "string", "minLength": 1}, "username": {"title": "Username", "type": "string", "minLength": 1}}}, "LoginResponse": {"required": ["access", "refresh"], "type": "object", "properties": {"access": {"title": "Access", "type": "string", "maxLength": 5555, "minLength": 1}, "refresh": {"title": "Refresh", "type": "string", "maxLength": 5555, "minLength": 1}}}, "LoginErrorResponse": {"type": "object", "properties": {"username": {"title": "Username", "type": "string", "maxLength": 255, "minLength": 1}, "password": {"title": "Password", "type": "string", "maxLength": 255, "minLength": 1}, "error": {"title": "Error", "type": "string", "maxLength": 255, "minLength": 1}, "detail": {"title": "Detail", "type": "string", "maxLength": 255, "minLength": 1}}}, "UserMFAMethod": {"required": ["name"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "is_primary": {"title": "Is primary", "type": "boolean"}}}, "SSO": {"required": ["code", "redirect_uri"], "type": "object", "properties": {"code": {"title": "Code", "type": "string", "maxLength": 5555, "minLength": 1}, "redirect_uri": {"title": "Redirect uri", "type": "string", "format": "uri", "minLength": 1}}}, "CompanyInfo": {"required": ["company_short_name", "company_long_name"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "created": {"title": "Created", "type": "string", "format": "date-time", "readOnly": true}, "modified": {"title": "Modified", "type": "string", "format": "date-time", "readOnly": true}, "company_short_name": {"title": "Company short name", "type": "string", "minLength": 1}, "company_long_name": {"title": "Company long name", "type": "string", "minLength": 1}, "company_terms_of_service_url": {"title": "Company terms of service url", "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}, "company_privacy_url": {"title": "Company privacy url", "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}, "company_website_url": {"title": "Company website url", "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}, "company_email_domain": {"title": "Company email domain", "type": "string", "x-nullable": true}, "company_address": {"title": "Company address", "type": "string", "minLength": 1, "x-nullable": true}, "aws": {"title": "Aws", "type": "boolean"}, "azure": {"title": "Azure", "type": "boolean"}, "bitbucket": {"title": "Bitbucket", "type": "boolean"}, "github": {"title": "Github", "type": "boolean"}, "google_cloud": {"title": "Google cloud", "type": "boolean"}, "gsuite": {"title": "Gsuite", "type": "boolean"}, "jira": {"title": "Jira", "type": "boolean"}, "slack": {"title": "Slack", "type": "boolean"}, "trello": {"title": "Trello", "type": "boolean"}, "office365": {"title": "Office365", "type": "boolean"}, "soc2_type1": {"title": "Soc2 type1", "type": "boolean"}, "soc2_type2": {"title": "Soc2 type2", "type": "boolean"}, "soc3": {"title": "Soc3", "type": "boolean"}, "hipaaa": {"title": "Hipaaa", "type": "boolean"}, "gdpr": {"title": "Gdpr", "type": "boolean"}, "other_option": {"title": "Other option", "type": "boolean"}, "other_text": {"title": "Other text", "type": "string", "minLength": 1}, "onboarding_complete": {"title": "Onboarding complete", "type": "boolean"}, "onboarding_progress": {"title": "Onboarding progress", "type": "integer", "maximum": 2147483647, "minimum": 0}, "owner": {"title": "Owner", "type": "string", "format": "uuid", "readOnly": true}, "creator": {"title": "Creator", "type": "string", "format": "uuid", "readOnly": true}, "modifier": {"title": "Modifier", "type": "string", "format": "uuid", "readOnly": true}}}, "ComplianceManger": {"required": ["email"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "created": {"title": "Created", "type": "string", "format": "date-time", "readOnly": true}, "modified": {"title": "Modified", "type": "string", "format": "date-time", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1, "x-nullable": true}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "phone_number": {"title": "Phone number", "type": "string", "maxLength": 500, "x-nullable": true}, "position_in_company": {"title": "Position in company", "type": "string", "maxLength": 255, "x-nullable": true}, "address": {"title": "Address", "type": "string", "maxLength": 500, "x-nullable": true}, "cloud_service_using": {"title": "Cloud service using", "type": "string", "maxLength": 255, "x-nullable": true}, "type_of_compliance_looking_for": {"title": "Type of compliance looking for", "type": "string", "maxLength": 255, "x-nullable": true}, "company": {"title": "Company", "type": "string", "format": "uuid", "readOnly": true}, "creator": {"title": "Creator", "type": "string", "format": "uuid", "readOnly": true}, "modifier": {"title": "Modifier", "type": "string", "format": "uuid", "readOnly": true}}}, "User": {"required": ["email", "company_name"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 255, "minLength": 1}, "last_login": {"title": "Last login", "type": "string", "format": "date-time", "x-nullable": true}, "first_name": {"title": "First name", "type": "string", "maxLength": 255, "x-nullable": true}, "last_name": {"title": "Last name", "type": "string", "maxLength": 255, "x-nullable": true}, "is_active": {"title": "Is active", "type": "boolean"}, "company_name": {"title": "Company name", "type": "string", "maxLength": 255, "minLength": 1}, "compliance_manager": {"title": "Compliance manager", "type": "string", "readOnly": true}, "password_change_required": {"title": "Password change required", "type": "string", "readOnly": true}, "company": {"title": "Company", "type": "string", "readOnly": true}, "created": {"title": "Created", "type": "string", "format": "date-time", "readOnly": true}, "is_employee": {"title": "Is employee", "type": "boolean"}, "is_auditor": {"title": "Is auditor", "type": "boolean"}}}, "Email": {"required": ["email"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email", "minLength": 1}}}, "PasswordToken": {"required": ["password", "token"], "type": "object", "properties": {"password": {"title": "Password", "type": "string", "minLength": 1}, "token": {"title": "Token", "type": "string", "minLength": 1}}}, "ResetToken": {"required": ["token"], "type": "object", "properties": {"token": {"title": "Token", "type": "string", "minLength": 1}}}, "PasswordChange": {"required": ["new_password1", "new_password2"], "type": "object", "properties": {"new_password1": {"title": "New password1", "type": "string", "maxLength": 128, "minLength": 1}, "new_password2": {"title": "New password2", "type": "string", "maxLength": 128, "minLength": 1}}}, "RestAuthRegister": {"required": ["username", "email", "password1", "password2", "first_name", "last_name", "company_name"], "type": "object", "properties": {"username": {"title": "Username", "type": "string", "maxLength": 255, "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "minLength": 1}, "password1": {"title": "Password1", "type": "string", "minLength": 1}, "password2": {"title": "Password2", "type": "string", "minLength": 1}, "first_name": {"title": "First name", "type": "string", "minLength": 1}, "last_name": {"title": "Last name", "type": "string", "minLength": 1}, "company_name": {"title": "Company name", "type": "string", "minLength": 1}}}, "TokenRefresh": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"title": "Refresh", "type": "string", "minLength": 1}, "access": {"title": "Access", "type": "string", "readOnly": true, "minLength": 1}}}, "TokenRefreshResponse": {"required": ["access"], "type": "object", "properties": {"access": {"title": "Access", "type": "string", "maxLength": 5555, "minLength": 1}}}, "TokenVerify": {"required": ["token"], "type": "object", "properties": {"token": {"title": "Token", "type": "string", "minLength": 1}}}, "Chatbot": {"required": ["query"], "type": "object", "properties": {"query": {"title": "Query", "type": "string", "maxLength": 255, "minLength": 1}}}, "ChatbotResponse": {"required": ["text"], "type": "object", "properties": {"text": {"title": "Text", "type": "string", "minLength": 1}}}, "Control": {"required": ["identifier", "title", "criterion"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "identifier": {"title": "Identifier", "type": "string", "format": "slug", "pattern": "^[-a-zA-Z0-9_]+$", "maxLength": 10, "minLength": 1}, "category": {"title": "Category", "type": "string", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 555, "minLength": 1}, "description": {"title": "Description", "type": "string", "readOnly": true}, "criterion": {"title": "Criterion", "type": "string", "format": "uuid"}, "tests": {"title": "Tests", "type": "string", "readOnly": true}, "status": {"title": "Status", "type": "string", "readOnly": true}}}, "Sla": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "test_result": {"title": "Test result", "type": "integer", "maximum": 2147483647, "minimum": -2147483648, "x-nullable": true}, "control": {"title": "Control", "type": "string", "readOnly": true}, "test": {"title": "Test", "type": "string", "readOnly": true}}}, "Computer": {"required": ["company", "owner", "computer", "monitoring", "os"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "company": {"title": "Company", "type": "string", "format": "uuid"}, "owner": {"title": "Owner", "type": "string", "format": "uuid"}, "computer": {"title": "Computer", "type": "string", "maxLength": 255, "minLength": 1}, "monitoring": {"title": "Monitoring", "type": "string", "maxLength": 100, "minLength": 1}, "os": {"title": "Os", "type": "string", "maxLength": 50, "minLength": 1}, "password_manager": {"title": "Password manager", "type": "boolean"}, "hard_drive_encryption": {"title": "Hard drive encryption", "type": "boolean"}, "anti_virus": {"title": "Anti virus", "type": "boolean"}, "screen_lock": {"title": "Screen lock", "type": "boolean"}, "last_check": {"title": "Last check", "type": "string", "format": "date-time", "x-nullable": true}}}, "Document": {"required": ["title", "document_type"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "uploaded_at": {"title": "Uploaded at", "type": "string", "format": "date-time", "readOnly": true}, "document_type": {"title": "Document type", "type": "string", "enum": ["Access request ticket and history", "Anonymous whistleblower channel", "Application status page", "Board of directors charter", "Board of directors meeting minutes and agenda", "Cloud provider service agreement", "Company organization chart", "Completed employee background checks", "Completed performance evaluations", "Contractor agreement", "Customer data deletion record", "Cybersecurity insurance policy document", "Employee agreement", "Employee termination checklist", "Job descriptions for key security roles", "Network diagram", "Penetration test report", "System Description (Section III)", "Compliance Report (SOC 2)", "Compliance Report (ISO 27001)", "Incident Report or Root Cause Analysis", "Tabletop Disaster Recovery Exercise", "Proof of Media/Device Disposal: Certificates of Destruction for Removable Storage or Employee Computers", "Evidence of encryption on portable and removable media devices", "Intrusion detection system installation"]}, "download_url": {"title": "Download url", "type": "string", "readOnly": true}}}, "Employee": {"required": ["name", "email", "company", "creator", "modifier"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "created": {"title": "Created", "type": "string", "format": "date-time", "readOnly": true}, "modified": {"title": "Modified", "type": "string", "format": "date-time", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "email": {"title": "Email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "background_checked": {"title": "Background checked", "type": "boolean"}, "accepted_policies": {"title": "Accepted policies", "type": "boolean"}, "security_training": {"title": "Security training", "type": "boolean"}, "hf_training_status": {"title": "Hf training status", "type": "integer", "maximum": 2147483647, "minimum": -2147483648}, "invited": {"title": "Invited", "type": "boolean"}, "is_deleted": {"title": "Is deleted", "type": "boolean"}, "title": {"title": "Title", "type": "string", "maxLength": 255, "x-nullable": true}, "onboarding_date": {"title": "Onboarding date", "type": "string", "format": "date-time", "x-nullable": true}, "offboarding_date": {"title": "Offboarding date", "type": "string", "format": "date-time", "x-nullable": true}, "background_checked_date": {"title": "Background checked date", "type": "string", "format": "date-time", "x-nullable": true}, "accepted_policies_date": {"title": "Accepted policies date", "type": "string", "format": "date-time", "x-nullable": true}, "security_training_date": {"title": "Security training date", "type": "string", "format": "date-time", "x-nullable": true}, "company": {"title": "Company", "type": "string", "format": "uuid"}, "creator": {"title": "Creator", "type": "string", "format": "uuid"}, "modifier": {"title": "Modifier", "type": "string", "format": "uuid"}, "background_checked_files": {"type": "array", "items": {"type": "integer"}, "uniqueItems": true}, "security_training_files": {"type": "array", "items": {"type": "integer"}, "uniqueItems": true}}}, "EmployeeMDM": {"required": ["computer"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "computer": {"title": "Computer", "type": "string", "maxLength": 255, "minLength": 1}, "employee": {"$ref": "#/definitions/Employee"}}}, "EmployeeEmploymentTypeUpdate": {"required": ["employees", "employment_type"], "type": "object", "properties": {"employees": {"type": "array", "items": {"type": "string", "format": "uuid"}, "uniqueItems": true}, "employment_type": {"title": "Employment type", "type": "string", "enum": ["Ex-Employee", "Contractor", "Account", "Employee"]}}}, "EmployeeUpdateResponse": {"required": ["detail"], "type": "object", "properties": {"detail": {"title": "Detail", "type": "string", "maxLength": 255, "minLength": 1}}}, "EmployeeMerge": {"required": ["employees", "primary_employee"], "type": "object", "properties": {"employees": {"type": "array", "items": {"type": "string", "format": "uuid"}, "uniqueItems": true}, "primary_employee": {"title": "Primary employee", "type": "string", "format": "uuid"}}}, "Integration": {"required": ["company", "name", "metadata_json"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "company": {"title": "Company", "type": "string", "format": "uuid"}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "template_name": {"title": "Template name", "type": "string", "enum": ["aws", "google", "office365", "gsuite", "slack", "github", "trello", "jira", "azure", "bitbucket"], "readOnly": true}, "metadata_json": {"title": "Metadata json", "type": "object"}, "active": {"title": "Active", "type": "boolean"}, "creator": {"title": "Creator", "type": "string", "format": "uuid", "readOnly": true}, "modifier": {"title": "Modifier", "type": "string", "format": "uuid", "readOnly": true}, "created": {"title": "Created", "type": "string", "format": "date-time", "readOnly": true}, "modified": {"title": "Modified", "type": "string", "format": "date-time", "readOnly": true}}}, "AWS": {"required": ["role_arn", "external_id", "name"], "type": "object", "properties": {"role_arn": {"title": "Role arn", "type": "string", "maxLength": 255, "minLength": 1}, "external_id": {"title": "External id", "type": "string", "maxLength": 255, "minLength": 1}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}}}, "AWSSerializerCloudFormation": {"required": ["role_arn", "token"], "type": "object", "properties": {"role_arn": {"title": "Role arn", "type": "string", "maxLength": 255, "minLength": 1}, "token": {"title": "Token", "type": "string", "maxLength": 255, "minLength": 1}}}, "Azure": {"required": ["name", "client_id", "tenant_id", "client_secret", "subscription_id"], "type": "object", "properties": {"name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "client_id": {"title": "Client id", "type": "string", "maxLength": 255, "minLength": 1}, "tenant_id": {"title": "Tenant id", "type": "string", "maxLength": 255, "minLength": 1}, "client_secret": {"title": "Client secret", "type": "string", "maxLength": 255, "minLength": 1}, "subscription_id": {"title": "Subscription id", "type": "string", "maxLength": 255, "minLength": 1}}}, "GitHub": {"required": ["code", "redirect_uri", "name"], "type": "object", "properties": {"code": {"title": "Code", "type": "string", "maxLength": 5555, "minLength": 1}, "redirect_uri": {"title": "Redirect uri", "type": "string", "format": "uri", "minLength": 1}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}}}, "GSuite": {"required": ["code", "redirect_uri", "name"], "type": "object", "properties": {"code": {"title": "Code", "type": "string", "maxLength": 5555, "minLength": 1}, "redirect_uri": {"title": "Redirect uri", "type": "string", "format": "uri", "minLength": 1}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}}}, "Jira": {"required": ["code", "redirect_uri", "name"], "type": "object", "properties": {"code": {"title": "Code", "type": "string", "maxLength": 5555, "minLength": 1}, "redirect_uri": {"title": "Redirect uri", "type": "string", "format": "uri", "minLength": 1}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}}}, "Office365": {"required": ["tenant_id", "redirect_uri", "name"], "type": "object", "properties": {"tenant_id": {"title": "Tenant id", "type": "string", "maxLength": 5555, "minLength": 1}, "redirect_uri": {"title": "Redirect uri", "type": "string", "format": "uri", "minLength": 1}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}}}, "Slack": {"required": ["code", "redirect_uri", "name"], "type": "object", "properties": {"code": {"title": "Code", "type": "string", "maxLength": 5555, "minLength": 1}, "redirect_uri": {"title": "Redirect uri", "type": "string", "format": "uri", "minLength": 1}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}}}, "InventoryDetail": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "owner": {"title": "Owner", "type": "string", "maxLength": 255, "minLength": 1, "x-nullable": true}, "description": {"title": "Description", "type": "string", "maxLength": 255, "minLength": 1, "x-nullable": true}, "instance_id": {"title": "Instance id", "type": "string", "maxLength": 255, "minLength": 1, "x-nullable": true}, "region": {"title": "Region", "type": "string", "maxLength": 255, "minLength": 1, "x-nullable": true}}}, "SubscriptionItem": {"required": ["product_id", "product_name", "product_description", "price_id", "price_nickname", "price", "freq", "subscription_status", "period_start", "period_end", "trial_start", "trial_end", "ended_at", "cancel_at", "cancel_at_period_end"], "type": "object", "properties": {"product_id": {"title": "Product id", "type": "string", "minLength": 1}, "product_name": {"title": "Product name", "type": "string", "minLength": 1}, "product_description": {"title": "Product description", "type": "string", "minLength": 1}, "price_id": {"title": "Price id", "type": "string", "minLength": 1}, "price_nickname": {"title": "Price nickname", "type": "string", "minLength": 1}, "price": {"title": "Price", "type": "string", "minLength": 1}, "freq": {"title": "Freq", "type": "string", "minLength": 1}, "subscription_status": {"title": "Subscription status", "type": "string", "minLength": 1}, "period_start": {"title": "Period start", "type": "string", "format": "date-time"}, "period_end": {"title": "Period end", "type": "string", "format": "date-time"}, "trial_start": {"title": "Trial start", "type": "string", "format": "date-time"}, "trial_end": {"title": "Trial end", "type": "string", "format": "date-time"}, "ended_at": {"title": "Ended at", "type": "string", "format": "date-time"}, "cancel_at": {"title": "Cancel at", "type": "string", "format": "date-time"}, "cancel_at_period_end": {"title": "Cancel at period end", "type": "boolean"}, "services": {"title": "Services", "type": "string", "readOnly": true}}}, "Subscription": {"required": ["id", "current_period_start", "current_period_end", "status"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "maxLength": 255, "minLength": 1}, "current_period_start": {"title": "Current period start", "description": "Start of the current period for which the subscription has been invoiced.", "type": "string", "format": "date-time"}, "current_period_end": {"title": "Current period end", "description": "End of the current period for which the subscription has been invoiced. At the end of this period, a new invoice will be created.", "type": "string", "format": "date-time"}, "status": {"title": "Status", "description": "The status of this subscription.", "type": "string", "enum": ["active", "canceled", "incomplete", "incomplete_expired", "past_due", "trialing", "unpaid"]}, "cancel_at": {"title": "Cancel at", "description": "A date in the future at which the subscription will automatically get canceled.", "type": "string", "format": "date-time", "x-nullable": true}, "cancel_at_period_end": {"title": "Cancel at period end", "description": "If the subscription has been canceled with the ``at_period_end`` flag set to true, ``cancel_at_period_end`` on the subscription will be true. You can use this attribute to determine whether a subscription that has a status of active is scheduled to be canceled at the end of the current period.", "type": "boolean"}, "trial_start": {"title": "Trial start", "description": "If the subscription has a trial, the beginning of that trial.", "type": "string", "format": "date-time", "x-nullable": true}, "trial_end": {"title": "Trial end", "description": "If the subscription has a trial, the end of that trial.", "type": "string", "format": "date-time", "x-nullable": true}}}, "Price": {"required": ["id", "product_id", "name", "avail", "currency"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "maxLength": 255, "minLength": 1}, "product_id": {"title": "Product id", "type": "string", "minLength": 1}, "name": {"title": "Name", "type": "string", "minLength": 1}, "unit_amount": {"title": "Unit amount", "description": "The unit amount in cents to be charged, represented as a whole integer if possible. Null if a sub-cent precision is required.", "type": "integer", "maximum": 9223372036854775807, "minimum": -9223372036854775808, "x-nullable": true}, "avail": {"title": "Avail", "type": "boolean"}, "currency": {"title": "Currency", "description": "Three-letter ISO currency code", "type": "string", "maxLength": 3, "minLength": 1}}}, "CompanyPolicyTemplate": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "policy_content_replaced": {"title": "Policy content replaced", "type": "string", "readOnly": true}, "placeholders": {"title": "Placeholders", "type": "string", "readOnly": true}, "topic_name": {"title": "Topic name", "type": "string", "readOnly": true}, "created": {"title": "Created", "type": "string", "format": "date-time", "readOnly": true}, "modified": {"title": "Modified", "type": "string", "format": "date-time", "readOnly": true}, "policy_template": {"title": "Policy template", "type": "string", "maxLength": 255, "x-nullable": true}, "policy_content": {"title": "Policy content", "type": "string", "x-nullable": true}, "is_updated_policy": {"title": "Is updated policy", "type": "boolean"}, "company": {"title": "Company", "type": "string", "format": "uuid", "readOnly": true}, "topic": {"title": "Topic", "type": "string", "format": "uuid", "readOnly": true}, "creator": {"title": "Creator", "type": "string", "format": "uuid", "readOnly": true}, "modifier": {"title": "Modifier", "type": "string", "format": "uuid", "readOnly": true}}}, "Topic": {"required": ["title", "rel_id", "subtext", "topic_type"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "rel_id": {"title": "Rel id", "type": "string", "maxLength": 255, "minLength": 1}, "subtext": {"title": "Subtext", "type": "string", "minLength": 1}, "topic_type": {"title": "Topic type", "type": "string", "enum": ["policy", "setup"]}, "icon": {"title": "Icon", "type": "string", "readOnly": true}}}, "Report": {"required": ["name", "owner"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 555, "minLength": 1}, "owner": {"title": "Owner", "type": "string", "format": "uuid"}, "report_url": {"title": "Report url", "type": "string", "readOnly": true}}}, "RiskCategory": {"required": ["name"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}}}, "RiskLibrary": {"required": ["description", "example", "category"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "is_added_to_risk_scenario": {"title": "Is added to risk scenario", "type": "string", "readOnly": true}, "created": {"title": "Created", "type": "string", "format": "date-time", "readOnly": true}, "modified": {"title": "Modified", "type": "string", "format": "date-time", "readOnly": true}, "description": {"title": "Description", "type": "string", "minLength": 1}, "example": {"title": "Example", "type": "string", "minLength": 1}, "likelihood": {"title": "Likelihood", "type": "integer", "enum": [0, 1, 2, 3, 4, 5]}, "impact": {"title": "Impact", "type": "integer", "enum": [0, 1, 2, 3, 4, 5]}, "category": {"title": "Category", "type": "string", "format": "uuid"}}}, "RiskScenario": {"required": ["description", "category"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "created": {"title": "Created", "type": "string", "format": "date-time", "readOnly": true}, "modified": {"title": "Modified", "type": "string", "format": "date-time", "readOnly": true}, "description": {"title": "Description", "type": "string", "minLength": 1}, "likelihood": {"title": "Likelihood", "type": "integer", "enum": [0, 1, 2, 3, 4, 5]}, "impact": {"title": "Impact", "type": "integer", "enum": [0, 1, 2, 3, 4, 5]}, "notes": {"title": "Notes", "type": "string"}, "category": {"title": "Category", "type": "string", "format": "uuid"}, "risk_library": {"title": "Risk library", "type": "string", "format": "uuid", "x-nullable": true}}}, "RiskTreatmentPlan": {"required": ["action", "due_date", "review_notes", "risk_scenario", "company"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "created": {"title": "Created", "type": "string", "format": "date-time", "readOnly": true}, "modified": {"title": "Modified", "type": "string", "format": "date-time", "readOnly": true}, "action": {"title": "Action", "type": "string", "enum": ["Accept", "Transfer", "Mitigate", "Avoid"]}, "due_date": {"title": "Due date", "type": "string", "format": "date"}, "review_notes": {"title": "Review notes", "type": "string", "minLength": 1}, "completed": {"title": "Completed", "type": "boolean"}, "reviewed_at": {"title": "Reviewed at", "type": "string", "format": "date-time", "readOnly": true}, "risk_scenario": {"title": "Risk scenario", "type": "string", "format": "uuid"}, "assigned_to": {"title": "Assigned to", "type": "string", "format": "uuid"}, "company": {"title": "Company", "type": "string", "format": "uuid"}}}, "RiskResidualScore": {"required": ["risk_scenario"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "created": {"title": "Created", "type": "string", "format": "date-time", "readOnly": true}, "modified": {"title": "Modified", "type": "string", "format": "date-time", "readOnly": true}, "likelihood": {"title": "Likelihood", "type": "integer", "enum": [0, 1, 2, 3, 4, 5]}, "impact": {"title": "Impact", "type": "integer", "enum": [0, 1, 2, 3, 4, 5]}, "risk_scenario": {"title": "Risk scenario", "type": "string", "format": "uuid"}}}, "RiskReview": {"required": ["review_date", "review_notes", "risk_scenario", "reviewer"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "created": {"title": "Created", "type": "string", "format": "date-time", "readOnly": true}, "modified": {"title": "Modified", "type": "string", "format": "date-time", "readOnly": true}, "likelihood": {"title": "Likelihood", "type": "integer", "enum": [0, 1, 2, 3, 4, 5]}, "impact": {"title": "Impact", "type": "integer", "enum": [0, 1, 2, 3, 4, 5]}, "review_date": {"title": "Review date", "type": "string", "format": "date"}, "review_notes": {"title": "Review notes", "type": "string", "minLength": 1}, "reviewed_at": {"title": "Reviewed at", "type": "string", "format": "date-time", "readOnly": true}, "risk_scenario": {"title": "Risk scenario", "type": "string", "format": "uuid"}, "reviewer": {"title": "Reviewer", "type": "string", "format": "uuid"}}}, "IntegrationScanStatus": {"required": ["type"], "type": "object", "properties": {"type": {"title": "Type", "type": "string", "enum": ["aws", "employee"]}}}, "IntegrationScanStatusResponse": {"required": ["running"], "type": "object", "properties": {"running": {"title": "Running", "type": "boolean"}}}, "TrustReport": {"required": ["title", "sub_title", "company"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "title": {"title": "Title", "type": "string", "maxLength": 255, "minLength": 1}, "sub_title": {"title": "Sub title", "type": "string", "minLength": 1}, "company": {"title": "Company", "type": "string", "format": "uuid"}, "is_public": {"title": "Is public", "type": "boolean"}, "bacground_color_1": {"title": "Bacground color 1", "type": "string", "maxLength": 255, "x-nullable": true}, "bacground_color_2": {"title": "Bacground color 2", "type": "string", "maxLength": 255, "x-nullable": true}, "logo": {"title": "Logo", "type": "string", "readOnly": true, "x-nullable": true, "format": "uri"}, "documents": {"title": "Documents", "type": "string", "readOnly": true}, "controls": {"title": "Controls", "type": "string", "readOnly": true}}}, "VendorCompany": {"required": ["name", "inherent_risk"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "minLength": 1}, "logo_url": {"title": "Logo url", "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}, "vendor_website_url": {"title": "Vendor website url", "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}, "inherent_risk": {"title": "Inherent risk", "type": "string", "enum": ["Critical", "High", "Medium", "Low", "Unscored"]}, "additional_note": {"title": "Additional note", "type": "string", "x-nullable": true}, "service_provided": {"title": "Service provided", "type": "string", "x-nullable": true}, "authentication_method": {"title": "Authentication method", "type": "string", "x-nullable": true}, "is_added_to_vendor": {"title": "Is added to vendor", "type": "string", "readOnly": true}}}, "VendorContactInfo": {"required": ["vendor", "account_manager_name", "account_manager_email", "creator", "modifier"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "vendor": {"title": "Vendor", "type": "string", "format": "uuid"}, "account_manager_name": {"title": "Account manager name", "type": "string", "minLength": 1}, "account_manager_email": {"title": "Account manager email", "type": "string", "format": "email", "maxLength": 254, "minLength": 1}, "creator": {"title": "Creator", "type": "string", "format": "uuid"}, "modifier": {"title": "Modifier", "type": "string", "format": "uuid"}}}, "VendorReference": {"required": ["vendor", "creator", "modifier"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "vendor": {"title": "Vendor", "type": "string", "format": "uuid"}, "file": {"title": "File", "type": "string", "readOnly": true, "format": "uri"}, "creator": {"title": "Creator", "type": "string", "format": "uuid"}, "modifier": {"title": "Modifier", "type": "string", "format": "uuid"}}}, "VendorRiskManagement": {"required": ["vendor", "vendor_category", "risk_level", "creator", "modifier"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "vendor": {"title": "Vendor", "type": "string", "format": "uuid"}, "vendor_category": {"title": "Vendor category", "type": "string", "maxLength": 255, "minLength": 1}, "risk_level": {"title": "Risk level", "type": "string", "enum": ["Critical", "High", "Medium", "Low", "Unscored"]}, "creator": {"title": "Creator", "type": "string", "format": "uuid"}, "modifier": {"title": "Modifier", "type": "string", "format": "uuid"}}}, "VendorSecurityReview": {"required": ["vendor", "creator", "modifier"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "vendor": {"title": "Vendor", "type": "string", "format": "uuid"}, "file": {"title": "File", "type": "string", "readOnly": true, "format": "uri"}, "creator": {"title": "Creator", "type": "string", "format": "uuid"}, "modifier": {"title": "Modifier", "type": "string", "format": "uuid"}}}, "Vendor": {"required": ["name", "inherent_risk"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "minLength": 1}, "vendor_website_url": {"title": "Vendor website url", "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}, "internal_security_owner": {"title": "Internal security owner", "type": "string", "x-nullable": true}, "inherent_risk": {"title": "Inherent risk", "type": "string", "enum": ["Critical", "High", "Medium", "Low", "Unscored"]}, "additional_note": {"title": "Additional note", "type": "string", "x-nullable": true}, "authentication_method": {"title": "Authentication method", "type": "string", "x-nullable": true}, "service_provided": {"title": "Service provided", "type": "string", "x-nullable": true}, "contact_info": {"type": "array", "items": {"$ref": "#/definitions/VendorContactInfo"}, "readOnly": true}, "security_reviews": {"type": "array", "items": {"$ref": "#/definitions/VendorSecurityReview"}, "readOnly": true}, "risk_management": {"type": "array", "items": {"$ref": "#/definitions/VendorRiskManagement"}, "readOnly": true}, "references": {"type": "array", "items": {"$ref": "#/definitions/VendorReference"}, "readOnly": true}}}, "VendorCreate": {"required": ["name", "inherent_risk"], "type": "object", "properties": {"id": {"title": "Id", "type": "string", "format": "uuid", "readOnly": true}, "name": {"title": "Name", "type": "string", "minLength": 1}, "vendor_website_url": {"title": "Vendor website url", "type": "string", "format": "uri", "maxLength": 200, "x-nullable": true}, "internal_security_owner": {"title": "Internal security owner", "type": "string", "x-nullable": true}, "inherent_risk": {"title": "Inherent risk", "type": "string", "enum": ["Critical", "High", "Medium", "Low", "Unscored"]}, "additional_note": {"title": "Additional note", "type": "string", "x-nullable": true}, "authentication_method": {"title": "Authentication method", "type": "string", "x-nullable": true}, "service_provided": {"title": "Service provided", "type": "string", "x-nullable": true}, "vendor_library": {"title": "Vendor library", "type": "string", "format": "uuid", "x-nullable": true}}}}}